// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: api.proto

package myproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RequestLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token"`
}

func (x *RequestLogin) Reset() {
	*x = RequestLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestLogin) ProtoMessage() {}

func (x *RequestLogin) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestLogin.ProtoReflect.Descriptor instead.
func (*RequestLogin) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

func (x *RequestLogin) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type RequestClientPong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddTime            int64 `protobuf:"varint,1,opt,name=add_time,json=addTime,proto3" json:"add_time"`
	ClientReceiveTime  int64 `protobuf:"varint,2,opt,name=client_receive_time,json=clientReceiveTime,proto3" json:"client_receive_time"`
	ServerResponseTime int64 `protobuf:"varint,3,opt,name=server_response_time,json=serverResponseTime,proto3" json:"server_response_time"`
	RttTimeout         int64 `protobuf:"varint,4,opt,name=rtt_timeout,json=rttTimeout,proto3" json:"rtt_timeout"`
	RttTimes           int32 `protobuf:"varint,5,opt,name=rtt_times,json=rttTimes,proto3" json:"rtt_times"`
}

func (x *RequestClientPong) Reset() {
	*x = RequestClientPong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestClientPong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestClientPong) ProtoMessage() {}

func (x *RequestClientPong) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestClientPong.ProtoReflect.Descriptor instead.
func (*RequestClientPong) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

func (x *RequestClientPong) GetAddTime() int64 {
	if x != nil {
		return x.AddTime
	}
	return 0
}

func (x *RequestClientPong) GetClientReceiveTime() int64 {
	if x != nil {
		return x.ClientReceiveTime
	}
	return 0
}

func (x *RequestClientPong) GetServerResponseTime() int64 {
	if x != nil {
		return x.ServerResponseTime
	}
	return 0
}

func (x *RequestClientPong) GetRttTimeout() int64 {
	if x != nil {
		return x.RttTimeout
	}
	return 0
}

func (x *RequestClientPong) GetRttTimes() int32 {
	if x != nil {
		return x.RttTimes
	}
	return 0
}

type RequestPlayerOperations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32        `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	RoomId         string       `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id"`
	SequenceNumber int32        `protobuf:"varint,3,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number"`
	Operations     []*Operation `protobuf:"bytes,4,rep,name=operations,proto3" json:"operations"`
}

func (x *RequestPlayerOperations) Reset() {
	*x = RequestPlayerOperations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestPlayerOperations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestPlayerOperations) ProtoMessage() {}

func (x *RequestPlayerOperations) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestPlayerOperations.ProtoReflect.Descriptor instead.
func (*RequestPlayerOperations) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{2}
}

func (x *RequestPlayerOperations) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RequestPlayerOperations) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *RequestPlayerOperations) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *RequestPlayerOperations) GetOperations() []*Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

type Operation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Event    string `protobuf:"bytes,2,opt,name=event,proto3" json:"event"`
	Value    string `protobuf:"bytes,3,opt,name=value,proto3" json:"value"`
	PlayerId int32  `protobuf:"varint,4,opt,name=player_id,json=playerId,proto3" json:"player_id"`
}

func (x *Operation) Reset() {
	*x = Operation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation) ProtoMessage() {}

func (x *Operation) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation.ProtoReflect.Descriptor instead.
func (*Operation) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3}
}

func (x *Operation) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Operation) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *Operation) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Operation) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

type RequestClientPing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddTime            int64 `protobuf:"varint,1,opt,name=add_time,json=addTime,proto3" json:"add_time"`
	ClientReceiveTime  int64 `protobuf:"varint,2,opt,name=client_receive_time,json=clientReceiveTime,proto3" json:"client_receive_time"`
	ServerResponseTime int64 `protobuf:"varint,3,opt,name=server_response_time,json=serverResponseTime,proto3" json:"server_response_time"`
	RttTimeout         int64 `protobuf:"varint,4,opt,name=rtt_timeout,json=rttTimeout,proto3" json:"rtt_timeout"`
	RttTimes           int32 `protobuf:"varint,5,opt,name=rtt_times,json=rttTimes,proto3" json:"rtt_times"`
}

func (x *RequestClientPing) Reset() {
	*x = RequestClientPing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestClientPing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestClientPing) ProtoMessage() {}

func (x *RequestClientPing) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestClientPing.ProtoReflect.Descriptor instead.
func (*RequestClientPing) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{4}
}

func (x *RequestClientPing) GetAddTime() int64 {
	if x != nil {
		return x.AddTime
	}
	return 0
}

func (x *RequestClientPing) GetClientReceiveTime() int64 {
	if x != nil {
		return x.ClientReceiveTime
	}
	return 0
}

func (x *RequestClientPing) GetServerResponseTime() int64 {
	if x != nil {
		return x.ServerResponseTime
	}
	return 0
}

func (x *RequestClientPing) GetRttTimeout() int64 {
	if x != nil {
		return x.RttTimeout
	}
	return 0
}

func (x *RequestClientPing) GetRttTimes() int32 {
	if x != nil {
		return x.RttTimes
	}
	return 0
}

type RequestPlayerResumeGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId       int32  `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id"`
	RoomId         string `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id"`
	SequenceNumber int32  `protobuf:"varint,3,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number"`
}

func (x *RequestPlayerResumeGame) Reset() {
	*x = RequestPlayerResumeGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestPlayerResumeGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestPlayerResumeGame) ProtoMessage() {}

func (x *RequestPlayerResumeGame) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestPlayerResumeGame.ProtoReflect.Descriptor instead.
func (*RequestPlayerResumeGame) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{5}
}

func (x *RequestPlayerResumeGame) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *RequestPlayerResumeGame) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *RequestPlayerResumeGame) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

type RequestPlayerMatchSign struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId int32 `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id"`
}

func (x *RequestPlayerMatchSign) Reset() {
	*x = RequestPlayerMatchSign{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestPlayerMatchSign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestPlayerMatchSign) ProtoMessage() {}

func (x *RequestPlayerMatchSign) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestPlayerMatchSign.ProtoReflect.Descriptor instead.
func (*RequestPlayerMatchSign) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{6}
}

func (x *RequestPlayerMatchSign) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

type RequestPlayerReady struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId int32  `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id"`
	RoomId   string `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id"`
}

func (x *RequestPlayerReady) Reset() {
	*x = RequestPlayerReady{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestPlayerReady) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestPlayerReady) ProtoMessage() {}

func (x *RequestPlayerReady) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestPlayerReady.ProtoReflect.Descriptor instead.
func (*RequestPlayerReady) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{7}
}

func (x *RequestPlayerReady) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *RequestPlayerReady) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

type RequestGetRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId int32  `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id"`
	RoomId   string `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id"`
}

func (x *RequestGetRoom) Reset() {
	*x = RequestGetRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGetRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGetRoom) ProtoMessage() {}

func (x *RequestGetRoom) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGetRoom.ProtoReflect.Descriptor instead.
func (*RequestGetRoom) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{8}
}

func (x *RequestGetRoom) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *RequestGetRoom) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

type RequestRoomHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId            int32  `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id"`
	RoomId              string `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id"`
	SequenceNumberStart int32  `protobuf:"varint,3,opt,name=sequence_numberStart,json=sequenceNumberStart,proto3" json:"sequence_numberStart"`
	SequenceNumberEnd   int32  `protobuf:"varint,4,opt,name=sequence_numberEnd,json=sequenceNumberEnd,proto3" json:"sequence_numberEnd"`
}

func (x *RequestRoomHistory) Reset() {
	*x = RequestRoomHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestRoomHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestRoomHistory) ProtoMessage() {}

func (x *RequestRoomHistory) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestRoomHistory.ProtoReflect.Descriptor instead.
func (*RequestRoomHistory) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{9}
}

func (x *RequestRoomHistory) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *RequestRoomHistory) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *RequestRoomHistory) GetSequenceNumberStart() int32 {
	if x != nil {
		return x.SequenceNumberStart
	}
	return 0
}

func (x *RequestRoomHistory) GetSequenceNumberEnd() int32 {
	if x != nil {
		return x.SequenceNumberEnd
	}
	return 0
}

type RequestPlayerMatchSignCancel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId int32 `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id"`
}

func (x *RequestPlayerMatchSignCancel) Reset() {
	*x = RequestPlayerMatchSignCancel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestPlayerMatchSignCancel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestPlayerMatchSignCancel) ProtoMessage() {}

func (x *RequestPlayerMatchSignCancel) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestPlayerMatchSignCancel.ProtoReflect.Descriptor instead.
func (*RequestPlayerMatchSignCancel) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{10}
}

func (x *RequestPlayerMatchSignCancel) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

type RequestClientHeartbeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time int64 `protobuf:"varint,1,opt,name=time,proto3" json:"time"`
}

func (x *RequestClientHeartbeat) Reset() {
	*x = RequestClientHeartbeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestClientHeartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestClientHeartbeat) ProtoMessage() {}

func (x *RequestClientHeartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestClientHeartbeat.ProtoReflect.Descriptor instead.
func (*RequestClientHeartbeat) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{11}
}

func (x *RequestClientHeartbeat) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type RequestGameOver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId       int32  `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id"`
	RoomId         string `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id"`
	SequenceNumber int32  `protobuf:"varint,3,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number"`
	Result         string `protobuf:"bytes,4,opt,name=result,proto3" json:"result"`
}

func (x *RequestGameOver) Reset() {
	*x = RequestGameOver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGameOver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGameOver) ProtoMessage() {}

func (x *RequestGameOver) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGameOver.ProtoReflect.Descriptor instead.
func (*RequestGameOver) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{12}
}

func (x *RequestGameOver) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *RequestGameOver) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *RequestGameOver) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *RequestGameOver) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type RequestPlayerOver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId       int32 `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id"`
	SequenceNumber int32 `protobuf:"varint,2,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number"`
}

func (x *RequestPlayerOver) Reset() {
	*x = RequestPlayerOver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestPlayerOver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestPlayerOver) ProtoMessage() {}

func (x *RequestPlayerOver) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestPlayerOver.ProtoReflect.Descriptor instead.
func (*RequestPlayerOver) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{13}
}

func (x *RequestPlayerOver) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *RequestPlayerOver) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

type ResponseLoginRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   int32   `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	ErrMsg string  `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg"`
	Player *Player `protobuf:"bytes,3,opt,name=player,proto3" json:"player"`
}

func (x *ResponseLoginRes) Reset() {
	*x = ResponseLoginRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseLoginRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseLoginRes) ProtoMessage() {}

func (x *ResponseLoginRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseLoginRes.ProtoReflect.Descriptor instead.
func (*ResponseLoginRes) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{14}
}

func (x *ResponseLoginRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResponseLoginRes) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *ResponseLoginRes) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

type ResponsePlayerStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname"`
	Status   int32  `protobuf:"varint,3,opt,name=status,proto3" json:"status"`
	RoomId   string `protobuf:"bytes,4,opt,name=room_id,json=roomId,proto3" json:"room_id"`
	AddTime  int32  `protobuf:"varint,5,opt,name=add_time,json=addTime,proto3" json:"add_time"`
	UpTime   int32  `protobuf:"varint,6,opt,name=up_time,json=upTime,proto3" json:"up_time"`
}

func (x *ResponsePlayerStatus) Reset() {
	*x = ResponsePlayerStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponsePlayerStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponsePlayerStatus) ProtoMessage() {}

func (x *ResponsePlayerStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponsePlayerStatus.ProtoReflect.Descriptor instead.
func (*ResponsePlayerStatus) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{15}
}

func (x *ResponsePlayerStatus) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResponsePlayerStatus) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *ResponsePlayerStatus) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ResponsePlayerStatus) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *ResponsePlayerStatus) GetAddTime() int32 {
	if x != nil {
		return x.AddTime
	}
	return 0
}

func (x *ResponsePlayerStatus) GetUpTime() int32 {
	if x != nil {
		return x.UpTime
	}
	return 0
}

type ResponseOtherPlayerOffline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId int32 `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id"`
}

func (x *ResponseOtherPlayerOffline) Reset() {
	*x = ResponseOtherPlayerOffline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseOtherPlayerOffline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseOtherPlayerOffline) ProtoMessage() {}

func (x *ResponseOtherPlayerOffline) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseOtherPlayerOffline.ProtoReflect.Descriptor instead.
func (*ResponseOtherPlayerOffline) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{16}
}

func (x *ResponseOtherPlayerOffline) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

type ResponseKickOff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time int64 `protobuf:"varint,1,opt,name=time,proto3" json:"time"`
}

func (x *ResponseKickOff) Reset() {
	*x = ResponseKickOff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseKickOff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseKickOff) ProtoMessage() {}

func (x *ResponseKickOff) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseKickOff.ProtoReflect.Descriptor instead.
func (*ResponseKickOff) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{17}
}

func (x *ResponseKickOff) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type ResponseStartBattle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SequenceNumberStart int32 `protobuf:"varint,1,opt,name=sequence_number_start,json=sequenceNumberStart,proto3" json:"sequence_number_start"`
}

func (x *ResponseStartBattle) Reset() {
	*x = ResponseStartBattle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseStartBattle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseStartBattle) ProtoMessage() {}

func (x *ResponseStartBattle) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseStartBattle.ProtoReflect.Descriptor instead.
func (*ResponseStartBattle) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{18}
}

func (x *ResponseStartBattle) GetSequenceNumberStart() int32 {
	if x != nil {
		return x.SequenceNumberStart
	}
	return 0
}

type ResponseServerPing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddTime            int64 `protobuf:"varint,1,opt,name=add_time,json=addTime,proto3" json:"add_time"`
	ClientReceiveTime  int64 `protobuf:"varint,2,opt,name=client_receive_time,json=clientReceiveTime,proto3" json:"client_receive_time"`
	ServerResponseTime int64 `protobuf:"varint,3,opt,name=server_response_time,json=serverResponseTime,proto3" json:"server_response_time"`
	RttTimeout         int64 `protobuf:"varint,4,opt,name=rtt_timeout,json=rttTimeout,proto3" json:"rtt_timeout"`
	RttTimes           int32 `protobuf:"varint,5,opt,name=rtt_times,json=rttTimes,proto3" json:"rtt_times"`
}

func (x *ResponseServerPing) Reset() {
	*x = ResponseServerPing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseServerPing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseServerPing) ProtoMessage() {}

func (x *ResponseServerPing) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseServerPing.ProtoReflect.Descriptor instead.
func (*ResponseServerPing) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{19}
}

func (x *ResponseServerPing) GetAddTime() int64 {
	if x != nil {
		return x.AddTime
	}
	return 0
}

func (x *ResponseServerPing) GetClientReceiveTime() int64 {
	if x != nil {
		return x.ClientReceiveTime
	}
	return 0
}

func (x *ResponseServerPing) GetServerResponseTime() int64 {
	if x != nil {
		return x.ServerResponseTime
	}
	return 0
}

func (x *ResponseServerPing) GetRttTimeout() int64 {
	if x != nil {
		return x.RttTimeout
	}
	return 0
}

func (x *ResponseServerPing) GetRttTimes() int32 {
	if x != nil {
		return x.RttTimes
	}
	return 0
}

type ResponseServerPong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddTime            int64 `protobuf:"varint,1,opt,name=add_time,json=addTime,proto3" json:"add_time"`
	ClientReceiveTime  int64 `protobuf:"varint,2,opt,name=client_receive_time,json=clientReceiveTime,proto3" json:"client_receive_time"`
	ServerResponseTime int64 `protobuf:"varint,3,opt,name=server_response_time,json=serverResponseTime,proto3" json:"server_response_time"`
	RttTimeout         int64 `protobuf:"varint,4,opt,name=rtt_timeout,json=rttTimeout,proto3" json:"rtt_timeout"`
	RttTimes           int32 `protobuf:"varint,5,opt,name=rtt_times,json=rttTimes,proto3" json:"rtt_times"`
}

func (x *ResponseServerPong) Reset() {
	*x = ResponseServerPong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseServerPong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseServerPong) ProtoMessage() {}

func (x *ResponseServerPong) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseServerPong.ProtoReflect.Descriptor instead.
func (*ResponseServerPong) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{20}
}

func (x *ResponseServerPong) GetAddTime() int64 {
	if x != nil {
		return x.AddTime
	}
	return 0
}

func (x *ResponseServerPong) GetClientReceiveTime() int64 {
	if x != nil {
		return x.ClientReceiveTime
	}
	return 0
}

func (x *ResponseServerPong) GetServerResponseTime() int64 {
	if x != nil {
		return x.ServerResponseTime
	}
	return 0
}

func (x *ResponseServerPong) GetRttTimeout() int64 {
	if x != nil {
		return x.RttTimeout
	}
	return 0
}

func (x *ResponseServerPong) GetRttTimes() int32 {
	if x != nil {
		return x.RttTimes
	}
	return 0
}

type ResponseEnterBattle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RandSeek       int32     `protobuf:"varint,1,opt,name=rand_seek,json=randSeek,proto3" json:"rand_seek"`
	RoomId         string    `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id"`
	SequenceNumber int32     `protobuf:"varint,3,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number"`
	Status         int32     `protobuf:"varint,4,opt,name=status,proto3" json:"status"`
	AddTime        int32     `protobuf:"varint,5,opt,name=add_time,json=addTime,proto3" json:"add_time"`
	Time           int64     `protobuf:"varint,6,opt,name=time,proto3" json:"time"`
	PlayerList     []*Player `protobuf:"bytes,7,rep,name=player_list,json=playerList,proto3" json:"player_list"`
	UdpPort        string    `protobuf:"bytes,8,opt,name=udp_port,json=udpPort,proto3" json:"udp_port"`
}

func (x *ResponseEnterBattle) Reset() {
	*x = ResponseEnterBattle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseEnterBattle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseEnterBattle) ProtoMessage() {}

func (x *ResponseEnterBattle) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseEnterBattle.ProtoReflect.Descriptor instead.
func (*ResponseEnterBattle) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{21}
}

func (x *ResponseEnterBattle) GetRandSeek() int32 {
	if x != nil {
		return x.RandSeek
	}
	return 0
}

func (x *ResponseEnterBattle) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *ResponseEnterBattle) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *ResponseEnterBattle) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ResponseEnterBattle) GetAddTime() int32 {
	if x != nil {
		return x.AddTime
	}
	return 0
}

func (x *ResponseEnterBattle) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *ResponseEnterBattle) GetPlayerList() []*Player {
	if x != nil {
		return x.PlayerList
	}
	return nil
}

func (x *ResponseEnterBattle) GetUdpPort() string {
	if x != nil {
		return x.UdpPort
	}
	return ""
}

type ResponsePushLogicFrame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32        `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	RoomId         string       `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id"`
	SequenceNumber int32        `protobuf:"varint,3,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number"`
	Operations     []*Operation `protobuf:"bytes,4,rep,name=operations,proto3" json:"operations"`
}

func (x *ResponsePushLogicFrame) Reset() {
	*x = ResponsePushLogicFrame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponsePushLogicFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponsePushLogicFrame) ProtoMessage() {}

func (x *ResponsePushLogicFrame) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponsePushLogicFrame.ProtoReflect.Descriptor instead.
func (*ResponsePushLogicFrame) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{22}
}

func (x *ResponsePushLogicFrame) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResponsePushLogicFrame) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *ResponsePushLogicFrame) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *ResponsePushLogicFrame) GetOperations() []*Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

type ResponseOtherPlayerOver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId       int32 `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id"`
	SequenceNumber int32 `protobuf:"varint,2,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number"`
}

func (x *ResponseOtherPlayerOver) Reset() {
	*x = ResponseOtherPlayerOver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseOtherPlayerOver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseOtherPlayerOver) ProtoMessage() {}

func (x *ResponseOtherPlayerOver) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseOtherPlayerOver.ProtoReflect.Descriptor instead.
func (*ResponseOtherPlayerOver) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{23}
}

func (x *ResponseOtherPlayerOver) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *ResponseOtherPlayerOver) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

type ResponseGameOver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId       int32  `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id"`
	RoomId         string `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id"`
	SequenceNumber int32  `protobuf:"varint,3,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number"`
	Result         string `protobuf:"bytes,4,opt,name=result,proto3" json:"result"`
}

func (x *ResponseGameOver) Reset() {
	*x = ResponseGameOver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseGameOver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseGameOver) ProtoMessage() {}

func (x *ResponseGameOver) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseGameOver.ProtoReflect.Descriptor instead.
func (*ResponseGameOver) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{24}
}

func (x *ResponseGameOver) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *ResponseGameOver) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *ResponseGameOver) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *ResponseGameOver) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type ResponseReadyTimeout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId string `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id"`
}

func (x *ResponseReadyTimeout) Reset() {
	*x = ResponseReadyTimeout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseReadyTimeout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseReadyTimeout) ProtoMessage() {}

func (x *ResponseReadyTimeout) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseReadyTimeout.ProtoReflect.Descriptor instead.
func (*ResponseReadyTimeout) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{25}
}

func (x *ResponseReadyTimeout) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

type ResponsePushRoomInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	AddTime        int32     `protobuf:"varint,2,opt,name=add_time,json=addTime,proto3" json:"add_time"`
	Status         int32     `protobuf:"varint,3,opt,name=status,proto3" json:"status"`
	Timeout        int32     `protobuf:"varint,4,opt,name=timeout,proto3" json:"timeout"`
	SequenceNumber int32     `protobuf:"varint,5,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number"`
	RandSeek       int32     `protobuf:"varint,6,opt,name=rand_seek,json=randSeek,proto3" json:"rand_seek"`
	PlayerList     []*Player `protobuf:"bytes,7,rep,name=player_list,json=playerList,proto3" json:"player_list"`
	RoomId         string    `protobuf:"bytes,8,opt,name=room_id,json=roomId,proto3" json:"room_id"`
	StartTime      int32     `protobuf:"varint,9,opt,name=start_time,json=startTime,proto3" json:"start_time"`
	EndTime        int32     `protobuf:"varint,10,opt,name=end_time,json=endTime,proto3" json:"end_time"`
}

func (x *ResponsePushRoomInfo) Reset() {
	*x = ResponsePushRoomInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponsePushRoomInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponsePushRoomInfo) ProtoMessage() {}

func (x *ResponsePushRoomInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponsePushRoomInfo.ProtoReflect.Descriptor instead.
func (*ResponsePushRoomInfo) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{26}
}

func (x *ResponsePushRoomInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ResponsePushRoomInfo) GetAddTime() int32 {
	if x != nil {
		return x.AddTime
	}
	return 0
}

func (x *ResponsePushRoomInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ResponsePushRoomInfo) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *ResponsePushRoomInfo) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *ResponsePushRoomInfo) GetRandSeek() int32 {
	if x != nil {
		return x.RandSeek
	}
	return 0
}

func (x *ResponsePushRoomInfo) GetPlayerList() []*Player {
	if x != nil {
		return x.PlayerList
	}
	return nil
}

func (x *ResponsePushRoomInfo) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *ResponsePushRoomInfo) GetStartTime() int32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ResponsePushRoomInfo) GetEndTime() int32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type ResponsePushRoomHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ResponseRoomHistory `protobuf:"bytes,1,rep,name=list,proto3" json:"list"`
}

func (x *ResponsePushRoomHistory) Reset() {
	*x = ResponsePushRoomHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponsePushRoomHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponsePushRoomHistory) ProtoMessage() {}

func (x *ResponsePushRoomHistory) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponsePushRoomHistory.ProtoReflect.Descriptor instead.
func (*ResponsePushRoomHistory) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{27}
}

func (x *ResponsePushRoomHistory) GetList() []*ResponseRoomHistory {
	if x != nil {
		return x.List
	}
	return nil
}

type ResponseRoomHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Action  string `protobuf:"bytes,2,opt,name=action,proto3" json:"action"`
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content"`
}

func (x *ResponseRoomHistory) Reset() {
	*x = ResponseRoomHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseRoomHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseRoomHistory) ProtoMessage() {}

func (x *ResponseRoomHistory) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseRoomHistory.ProtoReflect.Descriptor instead.
func (*ResponseRoomHistory) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{28}
}

func (x *ResponseRoomHistory) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResponseRoomHistory) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *ResponseRoomHistory) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ResponseOtherPlayerResumeGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId       int32  `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id"`
	RoomId         string `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id"`
	SequenceNumber int32  `protobuf:"varint,3,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number"`
}

func (x *ResponseOtherPlayerResumeGame) Reset() {
	*x = ResponseOtherPlayerResumeGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseOtherPlayerResumeGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseOtherPlayerResumeGame) ProtoMessage() {}

func (x *ResponseOtherPlayerResumeGame) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseOtherPlayerResumeGame.ProtoReflect.Descriptor instead.
func (*ResponseOtherPlayerResumeGame) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{29}
}

func (x *ResponseOtherPlayerResumeGame) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *ResponseOtherPlayerResumeGame) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *ResponseOtherPlayerResumeGame) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

type Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	RoleId       int32  `protobuf:"varint,2,opt,name=role_id,json=roleId,proto3" json:"role_id"`
	Nickname     string `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname"`
	Status       int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status"`
	AddTime      int32  `protobuf:"varint,5,opt,name=add_time,json=addTime,proto3" json:"add_time"`
	UpTime       int32  `protobuf:"varint,6,opt,name=upTime,proto3" json:"upTime"`
	RoomId       string `protobuf:"bytes,7,opt,name=room_id,json=roomId,proto3" json:"room_id"`
	SessionId    string `protobuf:"bytes,8,opt,name=session_id,json=sessionId,proto3" json:"session_id"`
	Timeout      int32  `protobuf:"varint,9,opt,name=timeout,proto3" json:"timeout"`
	ContentType  int32  `protobuf:"varint,10,opt,name=content_type,json=contentType,proto3" json:"content_type"`
	ProtocolType int32  `protobuf:"varint,11,opt,name=protocol_type,json=protocolType,proto3" json:"protocol_type"`
}

func (x *Player) Reset() {
	*x = Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{30}
}

func (x *Player) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Player) GetRoleId() int32 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *Player) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *Player) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Player) GetAddTime() int32 {
	if x != nil {
		return x.AddTime
	}
	return 0
}

func (x *Player) GetUpTime() int32 {
	if x != nil {
		return x.UpTime
	}
	return 0
}

func (x *Player) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *Player) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *Player) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *Player) GetContentType() int32 {
	if x != nil {
		return x.ContentType
	}
	return 0
}

func (x *Player) GetProtocolType() int32 {
	if x != nil {
		return x.ProtocolType
	}
	return 0
}

type ResponseRestartGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId    string  `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id"`
	PlayerIds []int32 `protobuf:"varint,2,rep,packed,name=player_ids,json=playerIds,proto3" json:"player_ids"`
}

func (x *ResponseRestartGame) Reset() {
	*x = ResponseRestartGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseRestartGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseRestartGame) ProtoMessage() {}

func (x *ResponseRestartGame) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseRestartGame.ProtoReflect.Descriptor instead.
func (*ResponseRestartGame) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{31}
}

func (x *ResponseRestartGame) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *ResponseRestartGame) GetPlayerIds() []int32 {
	if x != nil {
		return x.PlayerIds
	}
	return nil
}

type ResponsePlayerMatchSignFailed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId int32  `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id"`
	Msg      string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg"`
	Code     int32  `protobuf:"varint,3,opt,name=code,proto3" json:"code"`
}

func (x *ResponsePlayerMatchSignFailed) Reset() {
	*x = ResponsePlayerMatchSignFailed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponsePlayerMatchSignFailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponsePlayerMatchSignFailed) ProtoMessage() {}

func (x *ResponsePlayerMatchSignFailed) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponsePlayerMatchSignFailed.ProtoReflect.Descriptor instead.
func (*ResponsePlayerMatchSignFailed) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{32}
}

func (x *ResponsePlayerMatchSignFailed) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *ResponsePlayerMatchSignFailed) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ResponsePlayerMatchSignFailed) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type ResponsePlayerMatchingFailed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId int32  `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id"`
	Msg      string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg"`
	RoomId   string `protobuf:"bytes,3,opt,name=roomId,proto3" json:"roomId"`
	Code     int32  `protobuf:"varint,4,opt,name=code,proto3" json:"code"`
}

func (x *ResponsePlayerMatchingFailed) Reset() {
	*x = ResponsePlayerMatchingFailed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponsePlayerMatchingFailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponsePlayerMatchingFailed) ProtoMessage() {}

func (x *ResponsePlayerMatchingFailed) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponsePlayerMatchingFailed.ProtoReflect.Descriptor instead.
func (*ResponsePlayerMatchingFailed) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{33}
}

func (x *ResponsePlayerMatchingFailed) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *ResponsePlayerMatchingFailed) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ResponsePlayerMatchingFailed) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *ResponsePlayerMatchingFailed) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type CfgServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenIp           string `protobuf:"bytes,1,opt,name=ListenIp,proto3" json:"ListenIp"`
	OutIp              string `protobuf:"bytes,2,opt,name=OutIp,proto3" json:"OutIp"`
	HttpdRootPath      string `protobuf:"bytes,3,opt,name=HttpdRootPath,proto3" json:"HttpdRootPath"`
	HttpPort           string `protobuf:"bytes,4,opt,name=HttpPort,proto3" json:"HttpPort"`
	WsPort             string `protobuf:"bytes,5,opt,name=WsPort,proto3" json:"WsPort"`
	UdpPort            string `protobuf:"bytes,6,opt,name=UdpPort,proto3" json:"UdpPort"`
	Protocol           int32  `protobuf:"varint,7,opt,name=Protocol,proto3" json:"Protocol"`
	WsUri              string `protobuf:"bytes,8,opt,name=WsUri,proto3" json:"WsUri"`
	ContentType        int32  `protobuf:"varint,9,opt,name=ContentType,proto3" json:"ContentType"`
	LoginAuthType      string `protobuf:"bytes,10,opt,name=LoginAuthType,proto3" json:"LoginAuthType"`
	LoginAuthSecretKey string `protobuf:"bytes,11,opt,name=LoginAuthSecretKey,proto3" json:"LoginAuthSecretKey"`
	MaxClientConnNum   int32  `protobuf:"varint,12,opt,name=MaxClientConnNum,proto3" json:"MaxClientConnNum"`
	MsgContentMax      int32  `protobuf:"varint,13,opt,name=MsgContentMax,proto3" json:"MsgContentMax"`
	IOTimeout          int64  `protobuf:"varint,14,opt,name=IOTimeout,proto3" json:"IOTimeout"`
	ConnTimeout        int32  `protobuf:"varint,15,opt,name=ConnTimeout,proto3" json:"ConnTimeout"`
	MapSize            int32  `protobuf:"varint,16,opt,name=MapSize,proto3" json:"MapSize"`
	RoomPeople         int32  `protobuf:"varint,17,opt,name=RoomPeople,proto3" json:"RoomPeople"`
	RoomTimeout        int32  `protobuf:"varint,18,opt,name=RoomTimeout,proto3" json:"RoomTimeout"`
	OffLineWaitTime    int32  `protobuf:"varint,19,opt,name=OffLineWaitTime,proto3" json:"OffLineWaitTime"`
	LockMode           int32  `protobuf:"varint,20,opt,name=LockMode,proto3" json:"LockMode"`
	FPS                int32  `protobuf:"varint,21,opt,name=FPS,proto3" json:"FPS"`
	RoomReadyTimeout   int32  `protobuf:"varint,22,opt,name=RoomReadyTimeout,proto3" json:"RoomReadyTimeout"`
	Store              int32  `protobuf:"varint,23,opt,name=Store,proto3" json:"Store"`
	TcpPort            string `protobuf:"bytes,24,opt,name=TcpPort,proto3" json:"TcpPort"`
}

func (x *CfgServer) Reset() {
	*x = CfgServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgServer) ProtoMessage() {}

func (x *CfgServer) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgServer.ProtoReflect.Descriptor instead.
func (*CfgServer) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{34}
}

func (x *CfgServer) GetListenIp() string {
	if x != nil {
		return x.ListenIp
	}
	return ""
}

func (x *CfgServer) GetOutIp() string {
	if x != nil {
		return x.OutIp
	}
	return ""
}

func (x *CfgServer) GetHttpdRootPath() string {
	if x != nil {
		return x.HttpdRootPath
	}
	return ""
}

func (x *CfgServer) GetHttpPort() string {
	if x != nil {
		return x.HttpPort
	}
	return ""
}

func (x *CfgServer) GetWsPort() string {
	if x != nil {
		return x.WsPort
	}
	return ""
}

func (x *CfgServer) GetUdpPort() string {
	if x != nil {
		return x.UdpPort
	}
	return ""
}

func (x *CfgServer) GetProtocol() int32 {
	if x != nil {
		return x.Protocol
	}
	return 0
}

func (x *CfgServer) GetWsUri() string {
	if x != nil {
		return x.WsUri
	}
	return ""
}

func (x *CfgServer) GetContentType() int32 {
	if x != nil {
		return x.ContentType
	}
	return 0
}

func (x *CfgServer) GetLoginAuthType() string {
	if x != nil {
		return x.LoginAuthType
	}
	return ""
}

func (x *CfgServer) GetLoginAuthSecretKey() string {
	if x != nil {
		return x.LoginAuthSecretKey
	}
	return ""
}

func (x *CfgServer) GetMaxClientConnNum() int32 {
	if x != nil {
		return x.MaxClientConnNum
	}
	return 0
}

func (x *CfgServer) GetMsgContentMax() int32 {
	if x != nil {
		return x.MsgContentMax
	}
	return 0
}

func (x *CfgServer) GetIOTimeout() int64 {
	if x != nil {
		return x.IOTimeout
	}
	return 0
}

func (x *CfgServer) GetConnTimeout() int32 {
	if x != nil {
		return x.ConnTimeout
	}
	return 0
}

func (x *CfgServer) GetMapSize() int32 {
	if x != nil {
		return x.MapSize
	}
	return 0
}

func (x *CfgServer) GetRoomPeople() int32 {
	if x != nil {
		return x.RoomPeople
	}
	return 0
}

func (x *CfgServer) GetRoomTimeout() int32 {
	if x != nil {
		return x.RoomTimeout
	}
	return 0
}

func (x *CfgServer) GetOffLineWaitTime() int32 {
	if x != nil {
		return x.OffLineWaitTime
	}
	return 0
}

func (x *CfgServer) GetLockMode() int32 {
	if x != nil {
		return x.LockMode
	}
	return 0
}

func (x *CfgServer) GetFPS() int32 {
	if x != nil {
		return x.FPS
	}
	return 0
}

func (x *CfgServer) GetRoomReadyTimeout() int32 {
	if x != nil {
		return x.RoomReadyTimeout
	}
	return 0
}

func (x *CfgServer) GetStore() int32 {
	if x != nil {
		return x.Store
	}
	return 0
}

func (x *CfgServer) GetTcpPort() string {
	if x != nil {
		return x.TcpPort
	}
	return ""
}

type CfgProtocolActions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Client map[int32]*CfgActions `protobuf:"bytes,1,rep,name=client,proto3" json:"client" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Server map[int32]*CfgActions `protobuf:"bytes,2,rep,name=server,proto3" json:"server" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CfgProtocolActions) Reset() {
	*x = CfgProtocolActions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgProtocolActions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgProtocolActions) ProtoMessage() {}

func (x *CfgProtocolActions) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgProtocolActions.ProtoReflect.Descriptor instead.
func (*CfgProtocolActions) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{35}
}

func (x *CfgProtocolActions) GetClient() map[int32]*CfgActions {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *CfgProtocolActions) GetServer() map[int32]*CfgActions {
	if x != nil {
		return x.Server
	}
	return nil
}

type CfgActions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Action string `protobuf:"bytes,2,opt,name=action,proto3" json:"action"`
	Desc   string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc"`
	Demo   string `protobuf:"bytes,4,opt,name=demo,proto3" json:"demo"`
}

func (x *CfgActions) Reset() {
	*x = CfgActions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgActions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgActions) ProtoMessage() {}

func (x *CfgActions) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgActions.ProtoReflect.Descriptor instead.
func (*CfgActions) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{36}
}

func (x *CfgActions) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CfgActions) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *CfgActions) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *CfgActions) GetDemo() string {
	if x != nil {
		return x.Demo
	}
	return ""
}

type Msg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionId     int32  `protobuf:"varint,1,opt,name=action_id,json=actionId,proto3" json:"action_id"`
	Action       string `protobuf:"bytes,2,opt,name=action,proto3" json:"action"`
	Content      string `protobuf:"bytes,3,opt,name=content,proto3" json:"content"`
	ContentType  int32  `protobuf:"varint,4,opt,name=content_type,json=contentType,proto3" json:"content_type"`
	ProtocolType int32  `protobuf:"varint,5,opt,name=protocol_type,json=protocolType,proto3" json:"protocol_type"`
	SessionId    string `protobuf:"bytes,6,opt,name=sessionId,proto3" json:"sessionId"`
}

func (x *Msg) Reset() {
	*x = Msg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Msg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Msg) ProtoMessage() {}

func (x *Msg) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Msg.ProtoReflect.Descriptor instead.
func (*Msg) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{37}
}

func (x *Msg) GetActionId() int32 {
	if x != nil {
		return x.ActionId
	}
	return 0
}

func (x *Msg) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *Msg) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Msg) GetContentType() int32 {
	if x != nil {
		return x.ContentType
	}
	return 0
}

func (x *Msg) GetProtocolType() int32 {
	if x != nil {
		return x.ProtocolType
	}
	return 0
}

func (x *Msg) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

var File_api_proto protoreflect.FileDescriptor

var file_api_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6d, 0x79, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x24, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xce, 0x01, 0x0a, 0x11, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x6e, 0x67,
	0x12, 0x19, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x61, 0x64, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x72, 0x74, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x72, 0x74, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x72, 0x74, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x72, 0x74, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x9f, 0x01, 0x0a, 0x17,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64,
	0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x0a, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6d, 0x79, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x64, 0x0a,
	0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x64, 0x22, 0xce, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x64, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x11, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x12, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x74, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x74, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x74, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x74, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x22, 0x78, 0x0a, 0x17, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x35,
	0x0a, 0x16, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x12, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49,
	0x64, 0x22, 0x46, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x65, 0x74, 0x52,
	0x6f, 0x6f, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0xac, 0x01, 0x0a, 0x12, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x14, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x73, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x45, 0x6e, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x45, 0x6e, 0x64, 0x22, 0x3b, 0x0a, 0x1c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69,
	0x67, 0x6e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47,
	0x61, 0x6d, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x27, 0x0a,
	0x0f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x59,
	0x0a, 0x11, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4f,
	0x76, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x67, 0x0a, 0x10, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x27, 0x0a, 0x06, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x79, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x22, 0xa7, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x64, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x39, 0x0a, 0x1a,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x25, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4b, 0x69, 0x63, 0x6b, 0x4f, 0x66, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x49,
	0x0a, 0x13, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x22, 0xcf, 0x01, 0x0a, 0x12, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x69, 0x6e, 0x67,
	0x12, 0x19, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x61, 0x64, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x72, 0x74, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x72, 0x74, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x72, 0x74, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x72, 0x74, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0xcf, 0x01, 0x0a, 0x12,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6f,
	0x6e, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x64, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a,
	0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a,
	0x14, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x74, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x74, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x72, 0x74, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x74, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x88, 0x02,
	0x0a, 0x13, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x73, 0x65,
	0x65, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x61, 0x6e, 0x64, 0x53, 0x65,
	0x65, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08,
	0x61, 0x64, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x0b, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x6d, 0x79, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x75, 0x64, 0x70, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x75, 0x64, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x22, 0x9e, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x75, 0x73, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f,
	0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x79, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x5f, 0x0a, 0x17, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x4f, 0x76, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x89, 0x01, 0x0a, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x2f, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x65, 0x61, 0x64, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0xbe, 0x02, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x50, 0x75, 0x73, 0x68, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x61, 0x64, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x27, 0x0a,
	0x0f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x73,
	0x65, 0x65, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x61, 0x6e, 0x64, 0x53,
	0x65, 0x65, 0x6b, 0x12, 0x30, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x79, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x4b, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x50, 0x75, 0x73, 0x68, 0x52, 0x6f, 0x6f, 0x6d, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x30, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x79, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x57, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x7e,
	0x0a, 0x1d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xb2,
	0x02, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x64, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x75, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x4d, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f,
	0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f,
	0x6d, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x73, 0x22, 0x62, 0x0a, 0x1d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x46, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x79, 0x0a, 0x1c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67,
	0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x22, 0xfd, 0x05, 0x0a, 0x09, 0x43, 0x66, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x49, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x49, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x4f,
	0x75, 0x74, 0x49, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4f, 0x75, 0x74, 0x49,
	0x70, 0x12, 0x24, 0x0a, 0x0d, 0x48, 0x74, 0x74, 0x70, 0x64, 0x52, 0x6f, 0x6f, 0x74, 0x50, 0x61,
	0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x48, 0x74, 0x74, 0x70, 0x64, 0x52,
	0x6f, 0x6f, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x74, 0x74, 0x70, 0x50,
	0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x48, 0x74, 0x74, 0x70, 0x50,
	0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x57, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x57, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x55,
	0x64, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x55, 0x64,
	0x70, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x57, 0x73, 0x55, 0x72, 0x69, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x57, 0x73, 0x55, 0x72, 0x69, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x2e, 0x0a, 0x12, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x12,
	0x2a, 0x0a, 0x10, 0x4d, 0x61, 0x78, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x6e,
	0x4e, 0x75, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x4d, 0x61, 0x78, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x24, 0x0a, 0x0d, 0x4d,
	0x73, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x78, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d, 0x61,
	0x78, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x4f, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x49, 0x4f, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x43, 0x6f, 0x6e, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x61, 0x70, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x4d, 0x61, 0x70, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x52,
	0x6f, 0x6f, 0x6d, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x52,
	0x6f, 0x6f, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x28, 0x0a,
	0x0f, 0x4f, 0x66, 0x66, 0x4c, 0x69, 0x6e, 0x65, 0x57, 0x61, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x4f, 0x66, 0x66, 0x4c, 0x69, 0x6e, 0x65, 0x57,
	0x61, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x6b, 0x4d,
	0x6f, 0x64, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x4c, 0x6f, 0x63, 0x6b, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x46, 0x50, 0x53, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x46, 0x50, 0x53, 0x12, 0x2a, 0x0a, 0x10, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x61,
	0x64, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x10, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x61, 0x64, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x63, 0x70, 0x50, 0x6f,
	0x72, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x63, 0x70, 0x50, 0x6f, 0x72,
	0x74, 0x22, 0xb6, 0x02, 0x0a, 0x12, 0x43, 0x66, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3f, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x79, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x06, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x79, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x1a, 0x4e, 0x0a, 0x0b, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x79, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4e, 0x0a, 0x0b, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x79, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5c, 0x0a, 0x0a, 0x43, 0x66,
	0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x6d, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x6d, 0x6f, 0x22, 0xba, 0x01, 0x0a, 0x03, 0x4d, 0x73, 0x67,
	0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x3b, 0x6d, 0x79, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_rawDescOnce sync.Once
	file_api_proto_rawDescData = file_api_proto_rawDesc
)

func file_api_proto_rawDescGZIP() []byte {
	file_api_proto_rawDescOnce.Do(func() {
		file_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_rawDescData)
	})
	return file_api_proto_rawDescData
}

var file_api_proto_msgTypes = make([]protoimpl.MessageInfo, 40)
var file_api_proto_goTypes = []interface{}{
	(*RequestLogin)(nil),                  // 0: myproto.RequestLogin
	(*RequestClientPong)(nil),             // 1: myproto.RequestClientPong
	(*RequestPlayerOperations)(nil),       // 2: myproto.RequestPlayerOperations
	(*Operation)(nil),                     // 3: myproto.Operation
	(*RequestClientPing)(nil),             // 4: myproto.RequestClientPing
	(*RequestPlayerResumeGame)(nil),       // 5: myproto.RequestPlayerResumeGame
	(*RequestPlayerMatchSign)(nil),        // 6: myproto.RequestPlayerMatchSign
	(*RequestPlayerReady)(nil),            // 7: myproto.RequestPlayerReady
	(*RequestGetRoom)(nil),                // 8: myproto.RequestGetRoom
	(*RequestRoomHistory)(nil),            // 9: myproto.RequestRoomHistory
	(*RequestPlayerMatchSignCancel)(nil),  // 10: myproto.RequestPlayerMatchSignCancel
	(*RequestClientHeartbeat)(nil),        // 11: myproto.RequestClientHeartbeat
	(*RequestGameOver)(nil),               // 12: myproto.RequestGameOver
	(*RequestPlayerOver)(nil),             // 13: myproto.RequestPlayerOver
	(*ResponseLoginRes)(nil),              // 14: myproto.ResponseLoginRes
	(*ResponsePlayerStatus)(nil),          // 15: myproto.ResponsePlayerStatus
	(*ResponseOtherPlayerOffline)(nil),    // 16: myproto.ResponseOtherPlayerOffline
	(*ResponseKickOff)(nil),               // 17: myproto.ResponseKickOff
	(*ResponseStartBattle)(nil),           // 18: myproto.ResponseStartBattle
	(*ResponseServerPing)(nil),            // 19: myproto.ResponseServerPing
	(*ResponseServerPong)(nil),            // 20: myproto.ResponseServerPong
	(*ResponseEnterBattle)(nil),           // 21: myproto.ResponseEnterBattle
	(*ResponsePushLogicFrame)(nil),        // 22: myproto.ResponsePushLogicFrame
	(*ResponseOtherPlayerOver)(nil),       // 23: myproto.ResponseOtherPlayerOver
	(*ResponseGameOver)(nil),              // 24: myproto.ResponseGameOver
	(*ResponseReadyTimeout)(nil),          // 25: myproto.ResponseReadyTimeout
	(*ResponsePushRoomInfo)(nil),          // 26: myproto.ResponsePushRoomInfo
	(*ResponsePushRoomHistory)(nil),       // 27: myproto.ResponsePushRoomHistory
	(*ResponseRoomHistory)(nil),           // 28: myproto.ResponseRoomHistory
	(*ResponseOtherPlayerResumeGame)(nil), // 29: myproto.ResponseOtherPlayerResumeGame
	(*Player)(nil),                        // 30: myproto.Player
	(*ResponseRestartGame)(nil),           // 31: myproto.ResponseRestartGame
	(*ResponsePlayerMatchSignFailed)(nil), // 32: myproto.ResponsePlayerMatchSignFailed
	(*ResponsePlayerMatchingFailed)(nil),  // 33: myproto.ResponsePlayerMatchingFailed
	(*CfgServer)(nil),                     // 34: myproto.CfgServer
	(*CfgProtocolActions)(nil),            // 35: myproto.CfgProtocolActions
	(*CfgActions)(nil),                    // 36: myproto.CfgActions
	(*Msg)(nil),                           // 37: myproto.Msg
	nil,                                   // 38: myproto.CfgProtocolActions.ClientEntry
	nil,                                   // 39: myproto.CfgProtocolActions.ServerEntry
}
var file_api_proto_depIdxs = []int32{
	3,  // 0: myproto.RequestPlayerOperations.operations:type_name -> myproto.Operation
	30, // 1: myproto.ResponseLoginRes.player:type_name -> myproto.Player
	30, // 2: myproto.ResponseEnterBattle.player_list:type_name -> myproto.Player
	3,  // 3: myproto.ResponsePushLogicFrame.operations:type_name -> myproto.Operation
	30, // 4: myproto.ResponsePushRoomInfo.player_list:type_name -> myproto.Player
	28, // 5: myproto.ResponsePushRoomHistory.list:type_name -> myproto.ResponseRoomHistory
	38, // 6: myproto.CfgProtocolActions.client:type_name -> myproto.CfgProtocolActions.ClientEntry
	39, // 7: myproto.CfgProtocolActions.server:type_name -> myproto.CfgProtocolActions.ServerEntry
	36, // 8: myproto.CfgProtocolActions.ClientEntry.value:type_name -> myproto.CfgActions
	36, // 9: myproto.CfgProtocolActions.ServerEntry.value:type_name -> myproto.CfgActions
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_api_proto_init() }
func file_api_proto_init() {
	if File_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestClientPong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestPlayerOperations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestClientPing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestPlayerResumeGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestPlayerMatchSign); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestPlayerReady); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGetRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestRoomHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestPlayerMatchSignCancel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestClientHeartbeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGameOver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestPlayerOver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseLoginRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponsePlayerStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseOtherPlayerOffline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseKickOff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseStartBattle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseServerPing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseServerPong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseEnterBattle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponsePushLogicFrame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseOtherPlayerOver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseGameOver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseReadyTimeout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponsePushRoomInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponsePushRoomHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseRoomHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseOtherPlayerResumeGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseRestartGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponsePlayerMatchSignFailed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponsePlayerMatchingFailed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgProtocolActions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgActions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Msg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   40,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_proto_goTypes,
		DependencyIndexes: file_api_proto_depIdxs,
		MessageInfos:      file_api_proto_msgTypes,
	}.Build()
	File_api_proto = out.File
	file_api_proto_rawDesc = nil
	file_api_proto_goTypes = nil
	file_api_proto_depIdxs = nil
}
